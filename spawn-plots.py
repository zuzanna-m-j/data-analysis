#!/usr/bin/env python3

from ast import arg
import glob
import os
from re import I
import numpy as np
from celluloid import Camera
import matplotlib.pyplot as plt
from mpl_toolkits.axes_grid1 import make_axes_locatable
from skimage.measure import label, regionprops, regionprops_table
from skimage.transform import rotate
import pickle
from matplotlib import cm
import matplotlib.colors as mcolors
import copy
from skimage.morphology import dilation,remove_small_holes, square, remove_small_objects, closing, disk
import matplotlib.colors
import sys
import matplotlib.ticker as mtick
import argparse

import numpy as np
from scipy.optimize import curve_fit



# with open('data_file.data', 'r') as f:
#     data = f.readlines()


# should I average ???

N_vals = [51, 75]

chi_ac = [0.75, 0.50]

chi_b = [1.5,  1.25]

fig, ax = plt.subplots(2,1)
plt.suptitle(r"Shift in critical $\chi^{*}$")
ax[0].set_ylabel(r"$\chi_{AC-S}^{*}$")
ax[0].plot(N_vals, chi_ac, marker = 'o', label = r"AB")
ax[0].legend(loc = 'best')


ax[1].set_ylabel(r"$\chi_{B-S}^{*}$")
ax[1].set_xlabel("N (chain length)")
ax[1].plot(N_vals, chi_b, marker = 'o', label = r"ABC, $\chi_{AC-S}^{*}$")
ax[1].legend(loc = 'best')

plt.tight_layout()
plt.show()
# fig.savefig(f"Shift-in-critical-Chi-avg", dpi = 300)
# plt.close()



#75 - polar

AC_conc_75 = [0.2794409987269509, 0.28012374949535424, 0.27682994498954056, 0.288639227477179, 0.28243436463382365, 0.2873096732950343, 0.29746478673729393, 0.30503917207138065, 0.3124570279347273]
A_conc = [0.15228513873127345, 0.15271645420250715, 0.15058124621880203, 0.15673137043696556, 0.15299691845406235, 0.1553213286232933, 0.16007797549959515, 0.16399786440282285, 0.167182702075254]
B_conc_75 = [0.15830415781647533, 0.15843527250965866, 0.16010840896419906, 0.17393052537117665, 0.17794710573406464, 0.18755492123417136, 0.2165850648227796, 0.25222697900456614, 0.28342873667424123]
IAC_conc_75 = [1.0902231457995073, 1.0833993030845688, 1.0790379110859125, 1.0365598364774098, 1.0222368584621944, 1.014519964673582, 1.0135215214796853, 0.985682038841087, 0.9808939504613317]
IA_conc = [1.2046829427454424, 1.1902403901243765, 1.2031625120494192, 1.1952944858479435, 1.2052852192872552, 1.1854717818240792, 1.1835627375287876, 1.1725587104281427, 1.1889775850277609]
IB_conc_75 = [1.098523377256689, 1.1055116002034073, 1.0987156365929058, 1.0468123908502986, 1.027062317399358, 1.0035715024387986, 0.9656930254063554, 0.8878612194362696, 0.8260988595106654]
WAC_conc = [0.7704113356077756, 0.771531457442705, 0.7794725156734645, 0.7420892131055122, 0.7487004777781479, 0.7293188015125982, 0.6679737840562893, 0.6607772430585804, 0.6309875043134783]
WA_conc = [0.9989087015154489, 0.9953270978927518, 1.0064478503610947, 0.987313842790144, 1.0038362129684038, 0.9934125774378987, 0.9751765555168136, 0.9658125694700913, 0.9763582495866996]
WB_conc = [0.9933975599364003, 0.9725004853278477, 0.9500540984243759, 0.8349504515146857, 0.7821759685237946, 0.7233364205476941, 0.5516841027560866, 0.41790094655597687, 0.3011766201251595]


#50 - polar

AC_conc = [0.2579273626383477, 0.25920951741006865, 0.25834823403954954, 0.2584295607153473, 0.26098489250586937, 0.26364436352567316, 0.2709159098610931, 0.274370907842774, 0.27982498506913067]
A_conc = [0.14232391021638627, 0.14278533239167765, 0.14253433686919817, 0.14238232296910436, 0.14347261487306065, 0.14494798315414673, 0.14845460634613333, 0.14921243588686012, 0.15146910484413986]
B_conc_50 = [0.1447010287433901, 0.1490192621991994, 0.14834312893191826, 0.15295335212585742, 0.15555754397443744, 0.1606690283213962, 0.17429659992271757, 0.18570792671265693, 0.20172621391365828]
IAC_conc = [1.0778601801098735, 1.059305212473513, 1.0578637980768868, 1.0240269200830696, 1.0039443885458141, 0.9951497838709095, 0.9740706133185772, 0.9714549843851005, 0.9600619515200393]
IA_conc = [1.1983664851783657, 1.1965042959718524, 1.1984199425083653, 1.1979488136762872, 1.2002049011753324, 1.2070952124721939, 1.1910171567522028, 1.2049941305134153, 1.2053961967101379]
IB_conc_50 = [1.0921397911107935, 1.0743006437674396, 1.0636472431243742, 1.0302958895278538, 1.0043185215797692, 0.995683481127742, 0.9713549531748509, 0.9378134648091094, 0.8930546713574676]
WAC_conc = [0.7687121961951918, 0.7529576416973446, 0.7394899383060386, 0.7115319656253626, 0.6881141353056858, 0.6544374105906293, 0.612984435155784, 0.5676634945234714, 0.5496808028102391]
WA_conc = [1.001743276520083, 0.9937507449815777, 0.9968599679669099, 0.9967093260944699, 0.9829963005516015, 1.01781440374807, 0.9946756915254877, 1.0046232675925129, 0.9998885800935854]
WB_conc = [0.9591171382065076, 0.9168680738409761, 0.8714782623911791, 0.7753904819374002, 0.7491046953020213, 0.6811930632548893, 0.5848643363073867, 0.4769928064368248, 0.39707352033893123]

#polar

AC_conc_p = [0.32918140622544206, 0.3300888341291806, 0.3301477020464513, 0.34413887139261595, 0.36786308742193646, 0.39233035582973197, 0.419776851774751, 0.4364445731309659, 0.45424437438380294, 0.47804654651985995]
A_conc_p = [0.17381969180678652, 0.1738585340695257, 0.1737523937053998, 0.18062112080487644, 0.19079451645248546, 0.2021989966493018, 0.21430516106432926, 0.22222548435185624, 0.23046960147152384, 0.2410585265358974]
IAC_conc_p = [0.47894351448016226, 0.5012608033518089, 0.49209950665281743, 0.48291304265628676, 0.46506633401025765, 0.46682839661323733, 0.444481549707291, 0.4498514350186602, 0.42552673138065916, 0.40804570584311095]
IA_conc_p = [0.607153305028525, 0.5969595215002829, 0.6026131595030937, 0.5966393877442641, 0.6041968365231524, 0.5985726296131387, 0.6083252116945855, 0.5931061713137813, 0.5982374689866116, 0.5979642262123441]
WAC_conc = [0.8034114819821585, 0.7752313842987361, 0.7757379713268578, 0.7076228007088075, 0.5964957859665091, 0.4668179096725787, 0.36090152227325967, 0.27765095560082786, 0.21467042722924765, 0.12812590315745678]
WA_conc = [1.2051171487086807, 1.1903897997166517, 1.200511877564738, 1.1862857152784263, 1.1798475639115542, 1.2052865648281468, 1.2153879231297287, 1.1924800990233764, 1.2008396825139416, 1.1844331597502227]



#non-polar

AC_conc_np = [0.28353203985046965, 0.2894961569241451, 0.28897447376261504, 0.2976704406894119, 0.3189104782749948, 0.3448608950531611, 0.36899970632513696, 0.3916098571708152, 0.41206757213317396, 0.43930298411353097]
A_conc_np = [0.1513483741245302, 0.15367501443691922, 0.153154400662442, 0.15808478898663628, 0.16725530723668852, 0.17928927837462033, 0.19030295790430157, 0.20093738298443928, 0.20988349345455515, 0.2227609748733604]
IAC_conc_np = [0.540055955794859, 0.5388225168832345, 0.5348387676914006, 0.5302468147147301, 0.5161865447868559, 0.5071908125224828, 0.49998332981638227, 0.4811711466953457, 0.4612423684999957, 0.46147198426129743]
IA_conc_np = [0.6021332935318208, 0.6046343040518322, 0.6030893549650433, 0.6049070087157525, 0.5934419290736962, 0.601290033178111, 0.6060032695048726, 0.5948405529039811, 0.6028882853234472, 0.6030707524470327]
WAC_conc_np = [0.9883216191575483, 0.9539102351926175, 0.9617967764701527, 0.9035491563143433, 0.7822250534351565, 0.6381092346940908, 0.5078001945315028, 0.4130534023856895, 0.3211797769688804, 0.19027967072398339]
WA_conc = [1.196939773038547, 1.2190586012924027, 1.207665353668617, 1.2054028451898835, 1.1749547012180004, 1.2090663426651327, 1.203303642888881, 1.201809933272036, 1.1971118975275084, 1.2165780252007572]


# ac -scrambled

AC_conc_sc = [0.2775015757181971, 0.2790500546455057, 0.28425342877721277, 0.2975144726488939, 0.31875268771698145, 0.3585204429694999, 0.3906391834397742, 0.41528535699373553, 0.43245766736666247, 0.46349224412014556]
A_conc = [0.1487918771561886, 0.14921809280992498, 0.15191520402383443, 0.1581712551176091, 0.16808307935121794, 0.18610620481396484, 0.2001528881514131, 0.21151804203364089, 0.22000500065741366, 0.23425210342101999]

IAC_conc_sc = [0.5473202168417023, 0.5425433512211453, 0.5425424449326041, 0.5405471875335327, 0.517929761832422, 0.48566317284000565, 0.4621252441173104, 0.46498232730487343, 0.4505573330605428, 0.428199937230422]
IA_conc = [0.6015067001149363, 0.6029363176721476, 0.6000742427333946, 0.6002124475741747, 0.6041469719584878, 0.6003694437500767, 0.5975902100343491, 0.5993988294416494, 0.6001993866906956, 0.5960852745168351]

WAC_conc = [1.0145404725270457, 0.9982848509971814, 0.9661976977675373, 0.8861858303216378, 0.7777174686830775, 0.6004219552096339, 0.45181431571017094, 0.33490938077351234, 0.2603593225262737, 0.1498447829552699]
WA_conc = [1.1963310580769573, 1.2048051664817507, 1.2018268802697811, 1.2013601758049588, 1.207118686427419, 1.1980389259088224, 1.2139790218164814, 1.2222158239227905, 1.1904027769927892, 1.1566285275081865]






fig, ax = plt.subplots()
plt.suptitle(r"Ion concentration")

ax.plot(AC_conc_np, IAC_conc_np, marker = 'o', label = r"AC-non-polar")
ax.plot(AC_conc_p, IAC_conc_p, marker = 'o', label = r"AC-polar")
ax.plot(AC_conc_sc, IAC_conc_sc, marker = 'o', label = r"AC-polar-scrambled")


ax.set_ylabel(r"$<\rho_{ion}>$")
ax.set_xlabel(r"$<C^{*}>$")
ax.legend(loc = 'best')
plt.show()



fig, ax = plt.subplots()
plt.suptitle(r"Ion concentration")


ax.plot(B_conc_50, IB_conc_50, marker = 'o', label = r"B50")
ax.plot(B_conc_75, IB_conc_75, marker = 'o', label = r"B75")

ax.set_ylabel(r"$<\rho_{ion}>$")
ax.set_xlabel(r"$<C^{*}>$")
ax.legend(loc = 'best')
plt.show()

# 74
peak_rho_74 = [0.27483157046311063, 0.30029684597626366, 0.32557053552224285, 0.3560026021623351, 0.3933853099399682, 0.4216475983095163]
chi_vals_74 = [0.25, 0.5, 0.75, 1.0, 1.25, 1.5]

# 50 polar

peak_rho_50_p = [0.3253093564103669, 0.32400984307655584, 0.32743127899460167, 0.34184488697724286, 0.3699022522512882, 0.3932484225696718, 0.42326612826645366, 0.4400059054339214, 0.46239617388857646, 0.4854684246946543]
chi_vals_50_p = [0.0, 0.05, 0.1, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0]

# 50 non-polar

peak_rho_50_np = [0.2692041498368702, 0.2960990477947082, 0.2866118996919479, 0.28583464423142635, 0.3103783390727215, 0.34850812726958125, 0.37075716047813395, 0.39209618541678815, 0.4190098968325617, 0.4455856122260976]
chi_vals_50_np = [0.0, 0.05, 0.1, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0]


# AC - scramble - polar

peak_rho_sc = [0.27724639915885774, 0.276007624174388, 0.28015431178539335, 0.2895229112092956, 0.31183987009437025, 0.35802024621407375, 0.3936317445724581, 0.42439603939081905, 0.4398250027086142, 0.472200524048894]
chi_vals_sc = [0.0, 0.05, 0.1, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0]



fig, ax = plt.subplots()
plt.suptitle(r"Peak polymer concentration - AC")
ax.set_ylabel(r"$\chi_{AC-S}$")
ax.set_xlabel(r"$<C^{*}>$")

ax.plot(peak_rho_74, chi_vals_74, marker = 'o', label = r"AC-N74-polar")
ax.plot(peak_rho_50_p, chi_vals_50_p, marker = 'o', label = r"AC-N50-polar")
ax.plot(peak_rho_50_np, chi_vals_50_np, marker = 'o', label = r"AC-N50-non-polar")
ax.plot(peak_rho_sc, chi_vals_sc, marker = 'o', label = r"AC-N50-scrambled-polar")

ax.legend(loc = 'best')
plt.show()


# ABC - chibs - polar

peak_rho_p = [0.3673067615463136, 0.37759925039526665, 0.3857729653925586, 0.4098040346305295, 0.4189227568850453, 0.43286289048391957, 0.44926495526126076, 0.4599422193667332, 0.4687547454165051]
chi_vals_p = [0.0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0, 3.0]

# ABC - chibs - non-polar

peak_rho_np = [0.3294035241931557, 0.3509017298472805, 0.3578610817357609, 0.37402953773519043, 0.3890687726872738, 0.39974987473650214, 0.41813186272159214, 0.4238054204342557, 0.4353074303735816]
chi_vals_np = [0.0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0, 3.0]

# ABC - - scramble - chibs - polar

peak_rho_sc_p = [0.30165432617306925, 0.31118177685278975, 0.3221004512438416, 0.3400508540909324, 0.35364678731416127, 0.35747812222494496, 0.37473179124520634, 0.38050553873105075, 0.42369328690844676]
chi_vals_sc_p = [0.0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0, 3.0]


# ABC - - scramble - chibs - non-polar

peak_rho_sc_np = [0.3055153183450246, 0.31339502461754554, 0.31253819974901714, 0.3230119009104287, 0.34501311657624906, 0.34971683047769375, 0.35730821442825195, 0.3843743322208011, 0.41537559399496055]
chi_vals_sc_np = [0.0, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2.0, 3.0]


fig, ax = plt.subplots()
plt.suptitle(r"Peak polymer concentration - ABC")
ax.set_ylabel(r"$\chi_{B-S}$")
ax.set_xlabel(r"$<C^{*}>$")

ax.plot(peak_rho_p, chi_vals_p, marker = 'o', label = r"ABC - polar")
ax.plot(peak_rho_np, chi_vals_np, marker = 'o', label = r"ABC - non-polar")
ax.plot(peak_rho_sc_p, chi_vals_sc_p, marker = 'o', label = r"ABC - scrambled - polar")
ax.plot(peak_rho_sc_np, chi_vals_sc_np, marker = 'o', label = r"ABC - scrambled - non-polar")

# here b is polar or not
# a and c are kept polar

ax.legend(loc = 'best')
plt.show()



# salt --

# chi - 0.75 - non-polar
peak_rho_75_np = [0.31502458838960073, 0.3090098460297364, 0.2995641522677102, 0.2915312452519829, 0.28911022401153674, 0.27532109323366893, 0.2635645521457804, 0.26904918648792175]
chi_vals_75_np = [0.005, 0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3]


# chi - 0.75 - polar

peak_rho_75_p = [0.3853246339624419, 0.3863658182017136, 0.374718235194922, 0.3671541101912052, 0.36039855960101663, 0.34885929714428476, 0.3444054254548885, 0.3318447832553656]
chi_vals_75_p = [0.005, 0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3]



# chi - 1.50 - polar

peak_rho_150_p = [0.4641604855950307, 0.4613411106739482, 0.4437695089626923, 0.4427391451370472, 0.4348556556224187, 0.42844530451979884, 0.40859485807168405, 0.4013442701922215]
chi_vals_150_p = [0.005, 0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3]


# chi - 1.50 - non-polar

peak_rho_150_np = [0.411715376191121, 0.41958852130715174, 0.40965613342309626, 0.39555170084530955, 0.3843065794737231, 0.37582645616223015, 0.3673125078074541, 0.34648970265424156]
chi_vals_150_np = [0.005, 0.01, 0.05, 0.1, 0.15, 0.2, 0.25, 0.3]


fig, ax = plt.subplots()
plt.suptitle(r"Peak polymer concentration - AB - salt")
ax.set_ylabel(r"$\chi_{AC-S}$")
ax.set_xlabel(r"$<C^{*}>$")

ax.plot(peak_rho_75_np, chi_vals_75_np, marker = 'o', label = r"$\chi^{*} = 0.75$ - non-polar")
ax.plot(peak_rho_75_p, chi_vals_75_p, marker = 'o', label = r"$\chi^{*} = 0.75$ - polar")

ax.plot(peak_rho_150_np, chi_vals_150_np, marker = 'o', label = r"$\chi = 1.50$ - non-polar")
ax.plot(peak_rho_150_p, chi_vals_150_np, marker = 'o',label = r"$\chi = 1.50$ - polar")

ax.legend(loc = 'best')
plt.show()
